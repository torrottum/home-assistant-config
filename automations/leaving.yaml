---
- alias: "Leaving: Turn off everything when nobody is home"
  id: 7a80a995-94c3-494d-9840-cc01ce50b268
  mode: restart
  trigger:
    platform: state
    entity_id: binary_sensor.someone_home
    to: "off"
  action:
    service: script.turn_off_everything

- alias: "Leaving: Ask to turn off everything when guest mode is on"
  id: 28b233ce-ea65-413c-abfc-0a212eca7545
  mode: restart
  max_exceeded: silent
  trigger:
    platform: state
    entity_id: person.tor
    from: "home"
    to: "away"
  condition:
    - condition: state
      state: "on"
      entity_id: input_boolean.guest_mode
  action:
    - alias: "Set up variables for the actions"
      variables:
        action_everything: "{{ 'TURN_OFF_EVERYTHING_' ~ context.id }}"
        action_guest_mode: "{{ 'TURN_OFF_GUEST_MODE_' ~ context.id }}"
        action_dismiss: "{{ 'DISMISS_' ~ context.id }}"
    - service: notify.mobile_app_tors_iphone
      data:
        message: Something happened at home!
        data:
          actions:
            - action: "{{ action_everything }}"
              title: Turn off everything
            - action: "{{ action_guest_mode }}"
              title: Turn off guest mode
            - action: "{{ action_dismiss }}"
              title: Dismiss
    - alias: Wait for response
      wait_for_trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: "{{ action_everything }}"
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: "{{ action_guest_mode }}"
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: "{{ action_dismiss }}"
    - alias: Perform the action
      choose:
        - conditions: "{{ wait.trigger.event.data.action == action_everything }}"
          sequence:
            service: script.turn_off_everything
        - conditions: "{{ wait.trigger.event.data.action == action_guest_mode }}"
          sequence:
            service: input_boolean.turn_off
            target:
              entity_id: input_boolean.guest_mode
# - alias: "Perform the action"
#   choose:
#     - conditions: "{{ wait.trigger.event.data.action == action_open }}"
#       sequence:
#         - service: cover.open_cover
#           target:
#             entity_id: cover.some_cover
#     - conditions: "{{ wait.trigger.event.data.action == action_close }}"
#       sequence:
#         - service: cover.close_cover
#           target:
#             entity_id: cover.some_cover

# wait_for_trigger:
#     - platform: event
#       event_type: mobile_app_notification_action
#       event_data:
#         # waiting for the specific action avoids accidentally continuing
#         # for another script/automation's notification action
#         action: "{{ action_open }}"
#     - platform: event
#       event_type: mobile_app_notification_action
#       event_data:
#         action: "{{ action_close }}"
# # inside a automation actions or script sequence
# - alias: "Set up variables for the actions"
#   variables:
#     # Including an id in the action allows us to identify this script run
#     # and not accidentally trigger for other notification actions
#     action_open: "{{ 'OPEN_' ~ context.id }}"
#     action_close: "{{ 'CLOSE_' ~ context.id }}"
# - alias: "Ask to close or open the blinds"
#   service: notify.mobile_app_<your_device>
#   data:
#     message: "The blinds are half-open. Do you want to adjust this?"
#     data:
#       actions:
#         - action: "{{ action_open }}"
#           title: Open
#         - action: "{{ action_close }}"
#           title: Close
# - alias: "Wait for a response"
#   wait_for_trigger:
#     - platform: event
#       event_type: mobile_app_notification_action
#       event_data:
#         # waiting for the specific action avoids accidentally continuing
#         # for another script/automation's notification action
#         action: "{{ action_open }}"
#     - platform: event
#       event_type: mobile_app_notification_action
#       event_data:
#         action: "{{ action_close }}"
# - alias: "Perform the action"
#   choose:
#     - conditions: "{{ wait.trigger.event.data.action == action_open }}"
#       sequence:
#         - service: cover.open_cover
#           target:
#             entity_id: cover.some_cover
#     - conditions: "{{ wait.trigger.event.data.action == action_close }}"
#       sequence:
#         - service: cover.close_cover
#           target:
#             entity_id: cover.some_cover
